---

- name: Gather package facts.
  package_facts:
    manager: auto

- name: Install Make.
  become: yes
  become_user: root
  package:
    name: "build-essential"
    state: present
  when: '"build-essential" not in ansible_facts.packages'

- name: Check if Redis directory exists.
  stat:
    path: /tmp/redis-server/
  register: redis_directory

- name: Download and extract redis-{{ redis_version_string }}.tar.gz into /tmp.
  become: yes
  become_user: root
  unarchive:
    src: http://download.redis.io/releases/redis-{{ redis_version_string }}.tar.gz
    dest: /tmp
    remote_src: yes
  when: redis_directory.stat.isdir is undefined

- name: Rename Directory.
  become: yes
  become_user: root
  command:
    cmd: mv /tmp/redis-{{ redis_version_string }} /tmp/redis-server
    creates: /tmp/redis-server
  args:
    chdir: /usr/bin

- name: Check if Redis server file exists.
  stat:
    path: /tmp/redis-server/src/redis-server
  register: redis_server_file

- name: Build Redis.
  become: yes
  become_user: root
  make:
    chdir: /tmp/redis-server
  when: not redis_server_file.stat.exists

- name: Check if Redis server file is copied.
  stat:
    path: /usr/local/bin/redis-server
  register: redis_server_file_copied

- name: Install Redis
  become: yes
  become_user: root
  make:
    chdir: /tmp/redis-server
    target: install
  when: not redis_server_file_copied.stat.exists

- name: Check if Redis Configuration Directory exists.
  stat:
    path: /etc/redis/
  register: redis_configuration_directory

- name: Create Redis Configuration Directory.
  become: yes
  become_user: root
  file:
    path: /etc/redis/
    state: directory
    mode: 0755
  when: redis_configuration_directory.stat.isdir is undefined

- name: Check if Redis server configuration file exists.
  stat:
    path: /etc/redis/redis.conf
  register: redis_server_configuration_file

- name: Configure Redis.
  become: yes
  become_user: root
  template:
    src: redis.conf.j2
    dest: "/etc/redis/redis.conf"
    mode: 0644
  when: not redis_server_configuration_file.stat.exists

- name: Check if Redis sentinel configuration file exists.
  stat:
    path: /etc/redis/sentinel.conf
  register: redis_sentinel_configuration_file

- name: Configure Sentinel.
  become: yes
  become_user: root
  template:
    src: sentinel.conf.j2
    dest: "/etc/redis/sentinel.conf"
    mode: 0644
  when: not redis_sentinel_configuration_file.stat.exists

- name: Check if Redis server service file exists.
  stat:
    path: /etc/systemd/system/redis-server.service
  register: redis_server_service_file

- name: Copy Redis Server Service File.
  become: yes
  become_user: root
  copy:
    src: /tmp/redis-server/utils/systemd-redis_server.service
    dest: /etc/systemd/system/redis-server.service
    remote_src: yes
  when: not redis_server_service_file.stat.exists

- name: Replace in Redis Server Service File
  become: yes
  become_user: root
  replace:
    path: /etc/systemd/system/redis-server.service
    regexp: '--supervised systemd --daemonize no'
    replace: '/etc/redis/redis.conf'

- name: Replace in Redis Server Service File
  become: yes
  become_user: root
  replace:
    path: /etc/systemd/system/redis-server.service
    regexp: 'Type=notify'
    replace: 'Type=forking'

- name: Check if Redis sentinel service file exists.
  stat:
    path: /etc/systemd/system/redis-sentinel.service
  register: redis_sentinel_service_file

- name: Copy Redis Sentinel Service File.
  become: yes
  become_user: root
  copy:
    src: /tmp/redis-server/utils/systemd-redis_server.service
    dest: /etc/systemd/system/redis-sentinel.service
    remote_src: yes
  when: not redis_sentinel_service_file.stat.exists

- name: Replace in Redis Sentinel Service File
  become: yes
  become_user: root
  replace:
    path: /etc/systemd/system/redis-sentinel.service
    regexp: '--supervised systemd --daemonize no'
    replace: '/etc/redis/sentinel.conf --sentinel'

- name: Replace in Redis Sentinel Service File
  become: yes
  become_user: root
  replace:
    path: /etc/systemd/system/redis-sentinel.service
    regexp: 'Type=notify'
    replace: 'Type=forking'

- name: Create Redis Group.
  become: yes
  become_user: root
  group:
    name: redis
    system: yes
    state: present

- name: Add Redis System User.
  become: yes
  become_user: root
  user:
    name: redis
    group: redis
    system: yes
    create_home: no

- name: Check if Redis Data Directory exists.
  stat:
    path: /var/lib/redis/
  register: redis_data_directory

- name: Create Redis Data Directory.
  become: yes
  become_user: root
  file:
    path: /var/lib/redis
    state: directory
    mode: 0770
    owner: redis
    group: redis
  when: redis_data_directory.stat.isdir is undefined

- name: Check if Redis Log Directory exists.
  stat:
    path: /var/log/redis/
  register: redis_log_directory

- name: Create Redis Log Directory.
  become: yes
  become_user: root
  file:
    path: /var/log/redis
    state: directory
    mode: 0770
    owner: redis
    group: redis
  when: redis_log_directory.stat.isdir is undefined

- name: Register Redis Server Service.
  become: yes
  become_user: root
  service: "name=redis-server state=started enabled=yes"
  notify: Restart Redis Server

- name: Register Redis Sentinel Service.
  become: yes
  become_user: root
  service: "name=redis-sentinel state=started enabled=yes"
  notify: Restart Redis Sentinel

...
